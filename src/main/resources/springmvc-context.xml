<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:p="http://www.springframework.org/schema/p"
            xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="
                http://www.springframework.org/schema/mvc
                http://www.springframework.org/schema/mvc/spring-mvc.xsd
                http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd ">

    <!--激活基于注解配置的mapping  conversion-service="myDateConverter"-->
    <!--自定义日期类型转换器-->
    <mvc:annotation-driven conversion-service="myDateConverter">
        <!--解决返回json字符串乱码问题，必须放在扫描controller前-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--DispatcherServlet上下文，只搜索@controller标注的类-->
    <context:component-scan base-package="com.happybuy.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!--配置自定义Formatter-->
    <!--<bean id="myDateFormatter" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                &lt;!&ndash;这是自己写的Formatter&ndash;&gt;
                <bean class="com.haoge.common.MyDateFormatter" />
            </set>
        </property>
    </bean>-->

    <!--配置自定义Converter-->
    <bean id="myDateConverter" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <!--这是自己写的Converter-->
                <bean class="com.happybuy.common.MyDateConverter" />
            </set>
        </property>
    </bean>


    <!--SpringMVC的拦截器-->
    <mvc:interceptors>
        <!--拦截未登录用户访问用户个人中心-->
        <mvc:interceptor>
            <mvc:mapping path="/*/**"/>
            <bean class="com.happybuy.interceptor.UserNoLoginInterceptor">
                <property name="allowUrls">
                    <list>
                        <value>/user/regUser</value>
                        <value>/resources</value>
                        <value>/user/existUserName</value>
                        <value>/user/userActivate</value>
                        <value>/user/userLogin</value>
                        <value>/item</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>

        <!--拦截非管理员访问管理员后台界面-->
        <mvc:interceptor>
            <mvc:mapping path="/admin/**"/>
            <bean class="com.happybuy.interceptor.AdminRootInterceptor" />
        </mvc:interceptor>



    </mvc:interceptors>

    <!--静态资源处理 css,js.imgs等-->
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" />
    <!--<mvc:resources mapping="/upload" location="/upload/" />-->


    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--209715200即最大下载为200M  resolverLazily属性启用是为了推迟文件解析，
    以便捕获文件大小异常-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200" />
        <property name="defaultEncoding" value="utf-8" />
        <property name="resolveLazily" value="true" />
    </bean>

    <aop:aspectj-autoproxy/>
</beans>